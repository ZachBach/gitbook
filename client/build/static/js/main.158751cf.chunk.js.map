{"version":3,"sources":["components/layout/spinner.gif","context/currentUser/currentUserContext.js","components/layout/Navbar.js","components/layout/Spinner.js","components/repos/Repoitem.js","components/repos/Repos.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/pages/About.js","components/users/Search.js","components/users/Useritem.js","components/users/Users.js","components/pages/Home.js","components/pages/NotFound.js","components/privateroute/PrivateRoute.js","components/layout/Particles.js","components/pages/SignIn.js","context/wall/wallContext.js","context/Likes/likesContext.js","components/wallpost/Likes.js","components/wallpost/PostBox.js","context/Likes/likesReducer.js","context/types.js","context/Likes/likesState.js","components/wallpost/WallPost.js","components/wallpost/MessageBox.js","components/wallpost/Submit.js","components/wallpost/WritePost.js","components/pages/Wall.js","Messages.js","Input.js","components/pages/ChatApp.js","context/github/GithubState.js","context/github/githubReducer.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/currentUser/currentUserReducer.js","context/currentUser/currentUserState.js","context/wall/wallReducer.js","context/wall/wallState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CurrentUserContext","createContext","Navbar","icon","title","currentUserContext","useContext","className","to","CurrentUserGitHubHandle","defaultProps","Spinner","src","spinner","alt","style","width","margin","display","Repoitem","repo","href","html_url","name","Repos","repos","map","key","id","githubContext","User","match","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","alertContext","Alert","alert","AlertContext","type","msg","About","Search","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","userStyle","gridTemplateColumns","gridGap","Users","Home","NotFound","fakeAuth","isAuthenticated","authenticate","cb","this","setTimeout","signout","config","num","rps","radius","life","v","tha","rotate","alpha","scale","position","color","cross","random","g","onParticleUpdate","ctx","particle","beginPath","rect","p","x","y","fillStyle","fill","closePath","Particles","bg","SignIn","handleClick","a","updateCurrentUser","localStorage","clear","fetch","method","headers","Accept","then","data","json","console","log","result","WallContext","LikesContext","Likes","props","likesContext2","alignItems","postid","status","unlikeClicked","likeClicked","PostBox","wallContext","postArray","wallPostId","getAllWallPosts","post","userid","wallPostContent","justifyContent","state","action","payload","likesCount","LikesState","currentUser","initialState","useReducer","LikesReducer","dispatch","getLikes","onLoad","temp","body","JSON","stringify","Provider","children","WallPost","MessageBox","msgTyped","setMsgTyped","rows","newPost","Math","parentpostid","window","reload","SubmitContent","WritePost","Submit","Wall","useLayoutEffect","Messages","messages","m","renderMessage","message","member","currentMember","backgroundColor","clientData","userName","Component","Input","setState","onSendMessage","autofocus","randomColor","floor","toString","githubClientId","githubClientSecret","ChatApp","startRoom","drone","Scaledrone","on","error","clientId","username","subscribe","push","publish","room","curuser","getItem","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","GithubReducer","setLoading","axios","get","res","items","AlertState","AlertReducer","CurrentUserState","CurrentUserReducer","loggedin","currentuser","substring","indexOf","includes","setItem","WallState","WallReducer","getWallPosts","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.158751cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.baeaf0c7.gif\";","import React, { createContext } from 'react';\n\nexport const CurrentUserContext = createContext();\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { CurrentUserContext } from '../../context/currentUser/currentUserContext';\n\nconst Navbar = ({ icon, title }) => {\n  const currentUserContext = useContext(CurrentUserContext);\n  return (\n    <nav className='navbar bg-success'>\n      <h1>\n        <i className={icon} /> {title}\n      </h1>\n      <ul>\n        <li>\n          <Link to='/home'>Home</Link>\n        </li>\n        <li>\n          <Link to='/'>\n            {currentUserContext.CurrentUserGitHubHandle === null\n              ? 'Log in'\n              : 'Log out'}\n          </Link>\n        </li>\n        <li>\n          <Link to='/search'>Search</Link>\n        </li>\n        <li>\n          <Link to='/chat'>Chat</Link>\n        </li>\n        <li>\n          <Link to='/about'>About</Link>\n        </li>\n\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.defaultProps = {\n  title: 'Git Comm.it',\n  icon: 'fab fa-github',\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      alt='Loading...'\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Repoitem = ({ repo }) => {\n  return (\n    <div className='card'>\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\nRepoitem.propTypes = {\n  repo: PropTypes.object.isRequired,\n};\n\nexport default Repoitem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RepoItem from './Repoitem';\n\nconst Repos = ({ repos }) => {\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\n};\n\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired,\n};\n\nexport default Repos;\n","import { createContext } from 'react';\n\nconst githubContext = createContext();\n\nexport default githubContext;\n","import React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({ match }) => {\n  const githubContext = useContext(GithubContext);\n\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n  }, []);\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable,\n    company,\n  } = user;\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to='/search' className='btn btn-light'>\n        Back to Search\n      </Link>\n      Hireable:{' '}\n      {hireable ? (\n        <i className='fas fa-check text-success' />\n      ) : (\n        <i className='fas fa-times-circle text-danger' />\n      )}\n      <div className='card grid-2'>\n        <div className='all-center'>\n          <img\n            src={avatar_url}\n            className='round-img'\n            style={{ width: '150px' }}\n            alt=''\n          />\n          <h1>{name}</h1>\n          <p>Location: {location}</p>\n        </div>\n        <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1'>\n            Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong>Username: </strong> {login}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {company && (\n                <Fragment>\n                  <strong>Company: </strong> {company}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {blog && (\n                <Fragment>\n                  <strong>Website: </strong> {blog}\n                </Fragment>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className='card text-center'>\n        <div className='badge badge-primary'>Followers: {followers}</div>\n        <div className='badge badge-success'>Following: {following}</div>\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n      </div>\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n\nexport default User;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alert = () => {\n  const alertContext = useContext(AlertContext);\n\n  const { alert } = alertContext;\n\n  return (\n    alert !== null && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    )\n  );\n};\n\nexport default Alert;\n","import React, { Fragment } from 'react';\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About This App</h1>\n      <p>Social Media App for Developers</p>\n      <p>Version: 1.0.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Search = () => {\n  const githubContext = useContext(GithubContext);\n  const alertContext = useContext(AlertContext);\n\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (text === '') {\n      alertContext.setAlert('Please enter a valid Github user', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = (e) => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className='form'>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {githubContext.users.length > 0 && (\n        <button\n          className='btn btn-light btn-block'\n          onClick={githubContext.clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\n  return (\n    <div className='card text-center'>\n      <img\n        src={avatar_url}\n        alt=''\n        className='round-img'\n        style={{ width: '60px' }}\n      />\n      <h3> {login}</h3>\n\n      <div>\n        <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\n          More\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default UserItem;\n","import React, { useContext } from 'react';\nimport UserItem from './Useritem';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n\n  const { loading, users } = githubContext;\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem',\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport Search from '../users/Search';\nimport Users from '../users/Users';\n\nconst Home = () => (\n  <Fragment>\n    <Search />\n    <Users />\n  </Fragment>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1> Not Found</h1>\n      <p className='lead'>The page you are looking for does not exist..</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nexport const fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n\n  signout() {\n    this.isAuthenticated = false;\n\n    //also need to clear CurrentUser\n  },\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        fakeAuth.isAuthenticated === true ? (\n          console.log('hi')\n        ) : (\n            <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n          )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport ParticlesBg from 'particles-bg';\n\nlet config = {\n  num: [4, 7],\n  rps: 0.1,\n  radius: [5, 1],\n  life: [2, 3],\n  v: [10, 3],\n  tha: [-40, 40],\n  // body: icon, // Whether to render pictures\n  rotate: [40, 40],\n  alpha: [0.6, 10],\n  scale: [1, 0.1],\n  position: 'all', // all or center or {x:1,y:1,width:100,height:100}\n  color: ['black', '#ff0000'],\n  cross: 'dead', // cross or bround\n  random: 15, // or null,\n  g: 5, // gravity\n  // f: [2, -1], // force\n  onParticleUpdate: (ctx, particle) => {\n    ctx.beginPath();\n    ctx.rect(\n      particle.p.x,\n      particle.p.y,\n      particle.radius * -1,\n      particle.radius * -76\n    );\n    ctx.fillStyle = particle.color;\n    ctx.fill();\n    ctx.closePath();\n  },\n};\n\nconst Particles = () => (\n  <div>\n    <ParticlesBg type='cobweb' num={150} config={config} bg={true} />\n  </div>\n);\n\nexport default Particles;\n","import React, { useLayoutEffect, useContext } from 'react';\nimport { fakeAuth } from '../privateroute/PrivateRoute';\nimport '../styles/SignUp.css';\nimport Particles from '../layout/Particles';\nimport { CurrentUserContext } from '../../context/currentUser/currentUserContext';\n\nfunction SignIn({ icon }) {\n  const currentUserContext = useContext(CurrentUserContext);\n\n  const handleClick = async () => {\n    await currentUserContext.updateCurrentUser();\n    fakeAuth.authenticate(currentUserContext.CurrentUserGitHubHandle);\n  };\n\n  const signOut = () => {\n    // db.user.delete(currentUserContext.CurrentUserGitHubHandle)\n    localStorage.clear();\n    const delCurrentUser = fetch(\n      '/api/delete/' + currentUserContext.CurrentUserGitHubHandle,\n      {\n        method: 'DELETE',\n        // body: JSON.stringify(currentUserContext.CurrentUserId),\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n        },\n      }\n    )\n      .then((data) => {\n        data.json();\n        console.log('THIS IS DATTTTTTTTA');\n        console.log(data);\n      })\n      .then((result) => {\n        console.log('THIS BELOW IS REESULTTTTT');\n        console.log(result);\n        return result;\n      });\n    return delCurrentUser;\n  };\n\n  const signInLink = `/auth/github`;\n  const signOutLink = `/logout`;\n\n  const signInText = `Sign In with GitHub`;\n  const signOutText = `Log Out`;\n\n  return (\n    <div>\n      <Particles></Particles>\n      <div className='container-fluid'>\n        <div id='loginSection' className='row'>\n          <div className='form-group'> </div>\n          <a href={signInLink}>\n            <button className={icon} onClick={handleClick}>\n              {' '}\n              {signInText}\n            </button>\n          </a>\n        </div>\n\n        <div id='loginSection' className='row'>\n          <div className='form-group'> </div>\n          <a href={signOutLink}>\n            <button className={icon} onClick={signOut}>\n              {' '}\n              {signOutText}\n            </button>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\nSignIn.defaultProps = {\n  icon: 'fab fa-github',\n};\n\nexport default SignIn;\n","import React, { createContext } from 'react';\n\nexport const WallContext = createContext();\n","import React, { createContext } from 'react';\n\nexport const LikesContext = createContext();\n","import React, { useContext, useEffect } from 'react';\nimport { LikesContext } from '../../context/Likes/likesContext';\n\nconst Likes = (props) => {\n  const likesContext2 = useContext(LikesContext);\n\n  console.log(likesContext2);\n\n  return (\n    <div style={{ alignItems: \"left\" }}>\n      <button\n        type='button'\n        postid={props.id}\n        className='btn btn-success'\n        name='likesCount'\n        value={likesContext2}\n        onClick={\n          likesContext2.status\n            ? () => likesContext2.unlikeClicked(props.id)\n            : () => likesContext2.likeClicked(props.id)\n        }>\n        <i>\n          <img\n            src={\n              likesContext2.status\n                ? 'https://img.icons8.com/material-two-tone/24/000000/thumbs-down.png'\n                : 'https://img.icons8.com/material-two-tone/24/000000/thumb-up--v1.png'\n            }\n          />\n        </i>\n      </button>\n    </div>\n  );\n};\n\nexport default Likes;\n","import React, { useContext, useEffect } from 'react';\nimport { CurrentUserContext } from '../../context/currentUser/currentUserContext';\nimport { WallContext } from '../../context/wall/wallContext';\nimport Likes from './Likes';\nimport Reply from './Reply';\n\nconst PostBox = () => {\n  const currentUserContext = useContext(CurrentUserContext);\n  const wallContext = useContext(WallContext);\n\n  const { postArray, wallPostId } = wallContext;\n\n  useEffect(() => {\n    wallContext.getAllWallPosts();\n  }, []);\n\n  return (\n    <div>\n      <div className='form-group'>\n\n        {postArray &&\n          postArray.map((post) => {\n            return (\n              <div>\n                <label>{post.userid}</label>\n                <div className='form-control'>\n                  <p key={post.id}> {post.wallPostContent} </p>\n                </div>\n                <div className='row' style={{ justifyContent: \"left\" }}>\n                  <Likes id={post.wallPostId} />\n                  {/* <Reply /> */}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default PostBox;\n","import { LIKED, UNLIKED, LOAD } from '../types';\nexport default (state, action) => {\n  switch (action.type) {\n    case LIKED:\n      console.log('CASE LIKED');\n      console.log(action.payload);\n      console.log(state);\n\n      return {\n        ...state,\n        likesCount: state.likesCount + 1,\n        status: true,\n        postid: action.payload,\n        userid: state.userid,\n      };\n    case UNLIKED:\n      {\n        console.log('CASE UNLIKED');\n      }\n      return {\n        ...state,\n        likesCount: state.likesCount - 1,\n        status: false,\n        postid: action.payload,\n        userid: state.userid,\n      };\n    case LOAD:\n      {\n        console.log('CASE LOAD');\n      }\n      return {\n        ...state,\n        likesCount: action.payload.likesCount,\n        status: action.payload.status,\n        postid: action.payload.postid,\n        userid: action.payload.userid,\n      };\n    default:\n      return state;\n  }\n};\n","export const SEARCH_USERS = 'SEARCH_USERS';\nexport const GET_USER = 'GET_USER';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_UP = 'SIGN_UP';\nexport const LIKED = 'LIKED';\nexport const IS_AUTHENTICATED = 'IS_AUTHENTICATED';\nexport const WALL_POSTS = 'WALL_POSTS';\nexport const UNLIKED = 'UNLIKED';\nexport const LOAD = 'LOAD';\nexport const REPLY_POSTS = 'REPLY_POSTS';","import React, { useReducer, useContext } from 'react';\nimport { LikesContext } from './likesContext';\nimport { LIKED, UNLIKED, LOAD } from '../types';\nimport LikesReducer from './likesReducer';\nimport { CurrentUserContext } from '../../context/currentUser/currentUserContext';\n\nconst LikesState = (props) => {\n  const currentUserContext = useContext(CurrentUserContext);\n  const currentUser = currentUserContext.CurrentUserGitHubHandle;\n  // var currentid = props['children']['props']['children'][0]['props']['postid'];\n  var initialState = {\n    likesCount: 0,\n    status: false,\n    postid: null,\n    userid: currentUser,\n  };\n\n  const [state, dispatch] = useReducer(LikesReducer, initialState);\n\n  const getLikes = (postid) => {\n    const getdata = fetch('/api/likes' + postid, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((data) => {\n        console.log('THIS IS LIKES DATA');\n        console.log(data);\n        data.json();\n      })\n      .then((result) => {\n\n        return result;\n      });\n    return getdata;\n  };\n\n  const onLoad = async () => {\n    let temp;\n    await getLikes().then((data) => (temp = data));\n    // if (getLikes.likesCount === undefined) {\n    //   temp = initialState;\n    // }\n    await dispatch({\n      type: LOAD,\n      payload: temp,\n    });\n  };\n\n  const likeClicked = async (id) => {\n    fetch('/api/likes/', {\n      method: 'POST',\n      body: JSON.stringify(state),\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((data) => data.json())\n      .then((result) => {\n        console.log(result);\n        return result;\n      });\n    await dispatch({\n      type: LIKED,\n      payload: id,\n    });\n  };\n\n  const unlikeClicked = async (id) => {\n    fetch('/api/likes/' + currentUser + \"/\" + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((data) => data.json())\n      .then((result) => {\n        return result;\n      });\n    await dispatch({\n      type: UNLIKED,\n      payload: id,\n    });\n  };\n  return (\n    <LikesContext.Provider\n      value={{ ...state, likeClicked, unlikeClicked, onLoad, getLikes }}>\n      {props.children}\n    </LikesContext.Provider>\n  );\n};\n\nexport default LikesState;\n","import React, { useEffect, useContext } from 'react';\nimport PostBox from './PostBox';\nimport LikesState from '../../context/Likes/likesState';\n\nconst WallPost = () => {\n  return (\n    <LikesState>\n      <div>\n        <PostBox />\n        <div className='row'></div>\n      </div>\n    </LikesState>\n  );\n};\n\nexport default WallPost;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { CurrentUserContext } from '../../context/currentUser/currentUserContext';\n\nconst MessageBox = () => {\n  const currentUserContext = useContext(CurrentUserContext);\n\n  const [msgTyped, setMsgTyped] = useState('');\n\n  const onchange = (e) => {\n    setMsgTyped(e.target.value);\n    console.log(msgTyped);\n  };\n\n  const onsubmit = () => {\n    console.log(currentUserContext);\n    var newPost = {\n      wallPostId: Math.random() * 100000,\n      wallPostContent: msgTyped,\n      userid: currentUserContext.CurrentUserGitHubHandle,\n      parentpostid: currentUserContext.parentpostid,\n    };\n\n    fetch('/api/wallpost', {\n      method: 'POST',\n      body: JSON.stringify(newPost),\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((data) => data.json())\n      .then((result) => {\n        console.log(result);\n        window.location.reload(false);\n      });\n  };\n\n  return (\n    <form>\n      <div className='form-group'>\n        <label>{currentUserContext.CurrentUserGitHubHandle}</label>\n        <textarea\n          onChange={onchange}\n          value={msgTyped}\n          name='msgcontent'\n          className='form-control'\n          id='exampleFormControlTextarea1'\n          rows='3'></textarea>\n        <button\n          type='button'\n          onClick={onsubmit}\n          className='btn btn-dark btn-block'>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\"\n\nconst SubmitContent = () => {\n    return (\n        <div className=\"col-4\">\n        </div>\n    )\n}\n\nexport default SubmitContent;\n\n","import React from 'react';\nimport MessageBox from './MessageBox';\nimport SubmitContent from './Submit';\n\nconst WritePost = () => {\n  return (\n    <div>\n      <MessageBox />\n      <SubmitContent />\n    </div>\n  );\n};\n\nexport default WritePost;\n","import React, { useContext, useLayoutEffect } from 'react';\nimport WallPost from '../wallpost/WallPost';\nimport WritePost from '../wallpost/WritePost';\nimport { CurrentUserContext } from '../../context/currentUser/currentUserContext';\n\nconst Wall = () => {\n  const currentUserContext = useContext(CurrentUserContext);\n\n  console.log(currentUserContext)\n  useLayoutEffect(() => {\n    currentUserContext.updateCurrentUser();\n  }, []);\n\n  return (\n    currentUserContext.CurrentUserGitHubHandle && (\n      <div>\n        <WritePost />\n        <br />\n        <WallPost />\n      </div>\n    )\n  );\n};\n\nexport default Wall;\n","import { Component } from 'react';\nimport React from 'react';\n\nclass Messages extends Component {\n  render() {\n    const { messages } = this.props;\n    return (\n      <ul className='Messages-list'>\n        {messages.map((m) => this.renderMessage(m))}\n      </ul>\n    );\n  }\n\n  renderMessage(message) {\n    const { member, text } = message;\n    const { currentMember } = this.props;\n    const messageFromMe = member.id === currentMember.id;\n    const className = messageFromMe\n      ? 'Messages-message currentMember'\n      : 'Messages-message';\n    return (\n      <li className={className}>\n        <span\n          className='avatar'\n          style={{ backgroundColor: member.clientData.color }}\n        />\n        <div className='Message-content'>\n          <div className='username'>{member.clientData.userName}</div>\n          <div className='text'>{text}</div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Messages;\n","import {Component} from \"react\";\nimport React from \"react\";\n\nclass Input extends Component {\n  state = {\n    text: \"\"\n  }\n\n  onChange(e) {\n    this.setState({text: e.target.value});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({text: \"\"});\n    this.props.onSendMessage(this.state.text);\n  }\n\n  render() {\n    return (\n      <div className=\"Input\">\n        <form onSubmit={e => this.onSubmit(e)}>\n          <input\n            onChange={e => this.onChange(e)}\n            value={this.state.text}\n            type=\"text\"\n            placeholder=\"Enter your message and press ENTER\"\n            autofocus=\"true\"\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport '../../App.css';\nimport Messages from '../../Messages';\nimport Input from '../../Input';\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xffffff).toString(16);\n}\n\n\nclass ChatApp extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      messages: [],\n      member: {\n        username: 'WHY Delicate Flower',\n        color: randomColor(),\n      },\n    };\n  }\n\n  componentDidMount() {\n    const curuser = localStorage.getItem('user');\n\n    // this is where we will pass the Githubhandle below\n    this.startRoom(curuser);\n    this.setState({\n      member: { username: curuser },\n    });\n  }\n\n  startRoom = (name) => {\n    this.drone = new window.Scaledrone('v0EiAhIDZNsEFNfj', {\n      data: {\n        userName: name,\n        color: randomColor(),\n      },\n    });\n\n    this.drone.on('open', (error) => {\n      if (error) {\n        return console.error(error);\n      }\n      const member = { ...this.state.member };\n      member.id = this.drone.clientId;\n      member.user = this.state.member.username;\n\n      this.setState({ member });\n    });\n    const room = this.drone.subscribe('observable-room');\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({ member, text: data });\n      this.setState({ messages });\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <div className='App-header'>\n          <h1>Git.Chat</h1>\n        </div>\n        <Messages\n          id='chatMessages'\n          messages={this.state.messages}\n          currentMember={this.state.member}\n        />\n        <Input id='chatInput' onSendMessage={this.onSendMessage} />\n      </div>\n    );\n  }\n\n  onSendMessage = (message) => {\n    this.drone.publish({\n      room: 'observable-room',\n      message,\n    });\n  };\n}\n\nexport default ChatApp;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //   Search Users\n  const searchUsers = async (text) => {\n    setLoading();\n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=\n    ${githubClientId}&client_id=\n    ${githubClientSecret}`);\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items,\n    });\n  };\n\n  // Get user\n  const getUser = async (username) => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=\n    ${githubClientId}&client_id=\n    ${githubClientSecret}`);\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data,\n    });\n  };\n\n  //  Get Repos\n\n  const getUserRepos = async (username) => {\n    setLoading();\n\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\n    ${githubClientId}&client_id=\n    ${githubClientSecret}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  };\n\n  //  Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  //  Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}>\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return action.payload;\n\n    case REMOVE_ALERT:\n      return null;\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = (props) => {\n  const initialState = null;\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  //   Set Alert\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert,\n      }}>\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import { IS_AUTHENTICATED } from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case IS_AUTHENTICATED:\n            return {\n                ...state,\n\n                CurrentUserGitHubHandle: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","import React, { useReducer } from 'react';\nimport { CurrentUserContext } from './currentUserContext';\nimport { IS_AUTHENTICATED } from '../types';\nimport CurrentUserReducer from './currentUserReducer';\n\n\nconst CurrentUserState = (props) => {\n    var initialState = {\n        CurrentUserGitHubHandle: null,\n    };\n\n    const [state, dispatch] = useReducer(CurrentUserReducer, initialState);\n\n    const updateCurrentUser = async () => {\n        const loggedin = localStorage.getItem(\"user\")\n        let currentuser = window.location.href.substring(window.location.href.indexOf(\"home\") + 5, window.location.href.length)\n        console.log(loggedin)\n\n        if (loggedin === null && currentuser !== \"\" || loggedin.includes(\"/\")) {\n\n            localStorage.setItem(\"user\", currentuser)\n            await dispatch({\n                type: IS_AUTHENTICATED,\n                payload: currentuser,\n            });\n        }\n        else {\n            dispatch({\n                type: IS_AUTHENTICATED,\n                payload: loggedin,\n            });\n\n        }\n\n        //     else if (window.location.href.substring(window.location.href.indexOf(\"home\") + 5, window.location.href.length) === \"\") {\n        // console.log(\"DIS BETTER NOT RUN\")\n        // dispatch({\n        //     type: IS_AUTHENTICATED,\n        //     payload: null,\n        // });\n        // }\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={{ ...state, updateCurrentUser }}>\n            {props.children}\n        </CurrentUserContext.Provider>\n    );\n};\n\nexport default CurrentUserState;\n","import { WALL_POSTS } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case WALL_POSTS:\n      return {\n        ...state,\n        postArray: action.payload,\n        // id: action.payload.id,\n        wallPostId: action.payload.wallPostId,\n        // wallPostContent: action.payload.wallPostContent,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { WallContext } from './wallContext';\nimport WallReducer from './wallReducer';\n\nimport { WALL_POSTS } from '../types';\n\nconst WallState = (props) => {\n  var initialState = {\n    id: null,\n    wallPostId: null,\n    wallPostContent: '',\n  };\n\n  const [state, dispatch] = useReducer(WallReducer, initialState);\n\n  const getAllWallPosts = async () => {\n    const getWallPosts = await fetch('/api/wallpost', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((data) => data.json())\n      .then((result) => {\n        console.log('this is the result in the wall state')\n        console.log(result)\n        return result;\n      });\n\n    dispatch({\n      type: WALL_POSTS,\n      payload: getWallPosts,\n    });\n  };\n\n\n  return (\n    <WallContext.Provider value={{ ...state, getAllWallPosts }}>\n      {props.children}\n    </WallContext.Provider>\n  );\n};\n\nexport default WallState;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport Home from './components/pages/Home';\nimport NotFound from './components/pages/NotFound';\nimport SignIn from './components/pages/SignIn';\nimport Wall from './components/pages/Wall';\nimport ChatApp from './components/pages/ChatApp';\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\nimport CurrentUserState from './context/currentUser/currentUserState';\nimport WallState from './context/wall/wallState';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <CurrentUserState>\n          <WallState>\n            <Router>\n              <div className='App'>\n                <Navbar />\n                <div className='container'>\n                  <Alert />\n                  <Switch>\n                    <Route exact path='/chat' component={ChatApp} />\n                    <Route path='/home' component={Wall} />\n                    <Route exact path='/search' component={Home} />\n                    <Route exact path='/about' component={About} />\n                    <Route exact path='/user/:login' component={User} />\n                    <Route exact path='/' component={SignIn} />\n                    <Route component={NotFound} />\n                  </Switch>\n                </div>\n              </div>\n            </Router>\n          </WallState>\n        </CurrentUserState>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}