{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Spinner.js","components/repos/Repoitem.js","components/repos/Repos.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/pages/About.js","components/users/Search.js","components/users/Useritem.js","components/users/Users.js","components/pages/Home.js","components/pages/NotFound.js","components/privateroute/PrivateRoute.js","components/layout/Particles.js","components/pages/SignIn.js","context/WallMessages/wallMsgContext.js","components/wallpost/MessageBox.js","context/Likes/likesContext.js","context/Likes/likesReducer.js","context/types.js","context/Likes/likesState.js","components/wallpost/LikesCount.js","components/wallpost/Likes.js","components/wallpost/Reply.js","components/wallpost/PostBox.js","components/wallpost/WallPost.js","components/wallpost/Submit.js","components/wallpost/WritePost.js","components/pages/Wall.js","Messages.js","Input.js","components/pages/ChatApp.js","context/github/GithubState.js","context/github/githubReducer.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","Spinner","src","spinner","alt","style","width","margin","display","Repoitem","repo","href","html_url","name","Repos","repos","map","key","id","githubContext","createContext","User","match","useContext","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","alertContext","Alert","alert","AlertContext","type","msg","About","Search","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","userStyle","gridTemplateColumns","gridGap","Users","Home","NotFound","fakeAuth","isAuthenticated","authenticate","cb","console","log","undefined","this","signout","Particles","bg","SignIn","handleClick","a","fetch","method","headers","Accept","then","data","json","result","CurrentUserToken","getCurrentUser","wallMsgContext","MessageBox","WallMsgContext","state","setState","msgcontent","inputValue","rows","event","newPost","wallPostId","Math","random","wallPostContent","body","JSON","stringify","LikesContext","action","likesCount","LikesState","props","useReducer","LikesReducer","dispatch","Provider","likeClicked","children","LikesCount","likesContext2","Likes","Reply","role","PostBox","WallPost","SubmitContent","WritePost","Submit","Wall","Messages","messages","m","renderMessage","message","member","currentMember","backgroundColor","clientData","color","username","Component","Input","onSendMessage","autofocus","randomName","adjectives","nouns","floor","githubClientId","githubClientSecret","ChatApp","toString","drone","publish","room","window","Scaledrone","on","error","clientId","subscribe","push","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","GithubReducer","setLoading","axios","get","res","items","AlertState","AlertReducer","setTimeout","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac712303.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.baeaf0c7.gif\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst Navbar = ({ icon, title }) => {\n  return (\n    <nav className='navbar bg-primary'>\n      <h1>\n        <i className={icon} /> {title}\n      </h1>\n      <ul>\n        <li>\n          <Link to='/home'>Home</Link>\n        </li>\n        <li>\n          <Link to='/'>Login </Link>\n        </li>\n        <li>\n          <Link to='/search'>Search</Link>\n        </li>\n        <li>\n          <Link to='/chat'>Chat</Link>\n        </li>\n        <li>\n          <Link to='/about'>About</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.defaultProps = {\n  title: 'GitBook',\n  icon: 'fab fa-github',\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      alt='Loading...'\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Repoitem = ({ repo }) => {\n  return (\n    <div className='card'>\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\nRepoitem.propTypes = {\n  repo: PropTypes.object.isRequired,\n};\n\nexport default Repoitem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RepoItem from './Repoitem';\n\nconst Repos = ({ repos }) => {\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\n};\n\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired,\n};\n\nexport default Repos;\n","import { createContext } from 'react';\n\nconst githubContext = createContext();\n\nexport default githubContext;\n","import React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({ match }) => {\n  const githubContext = useContext(GithubContext);\n\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n  }, []);\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable,\n    company,\n  } = user;\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back to Search\n      </Link>\n      Hireable:{' '}\n      {hireable ? (\n        <i className='fas fa-check text-success' />\n      ) : (\n        <i className='fas fa-times-circle text-danger' />\n      )}\n      <div className='card grid-2'>\n        <div className='all-center'>\n          <img\n            src={avatar_url}\n            className='round-img'\n            style={{ width: '150px' }}\n            alt=''\n          />\n          <h1>{name}</h1>\n          <p>Location: {location}</p>\n        </div>\n        <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1'>\n            Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong>Username: </strong> {login}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {company && (\n                <Fragment>\n                  <strong>Company: </strong> {company}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {blog && (\n                <Fragment>\n                  <strong>Website: </strong> {blog}\n                </Fragment>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className='card text-center'>\n        <div className='badge badge-primary'>Followers: {followers}</div>\n        <div className='badge badge-success'>Following: {following}</div>\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n      </div>\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n\nexport default User;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alert = () => {\n  const alertContext = useContext(AlertContext);\n\n  const { alert } = alertContext;\n\n  return (\n    alert !== null && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    )\n  );\n};\n\nexport default Alert;\n","import React, { Fragment } from 'react';\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About This App</h1>\n      <p>Social Media App for Developers</p>\n      <p>Version: 1.0.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Search = () => {\n  const githubContext = useContext(GithubContext);\n  const alertContext = useContext(AlertContext);\n\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (text === '') {\n      alertContext.setAlert('Please enter a valid Github user', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = (e) => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className='form'>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {githubContext.users.length > 0 && (\n        <button\n          className='btn btn-light btn-block'\n          onClick={githubContext.clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\n  return (\n    <div className='card text-center'>\n      <img\n        src={avatar_url}\n        alt=''\n        className='round-img'\n        style={{ width: '60px' }}\n      />\n      <h3> {login}</h3>\n\n      <div>\n        <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\n          More\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default UserItem;\n","import React, { useContext } from 'react';\nimport UserItem from './Useritem';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n\n  const { loading, users } = githubContext;\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem',\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport Search from '../users/Search';\nimport Users from '../users/Users';\n\nconst Home = () => (\n  <Fragment>\n    <Search />\n    <Users />\n  </Fragment>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1> Not Found</h1>\n      <p className='lead'>The page you are looking for does not exist..</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\n\n\nexport const fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    console.log(\"this is CBBBBBBBB \" + cb)\n    if (cb === undefined || cb === null) {\n      console.log(\"null/Undef\")\n    } else {\n      this.isAuthenticated = true;\n    }\n  },\n\n  signout() {\n    this.isAuthenticated = false;\n    //also need to clear CurrentUser\n  }\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (\n      fakeAuth.isAuthenticated === true ?\n        <Component {...props} />\n        :\n        <Redirect to='/login' />\n\n    )}\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport ParticlesBg from 'particles-bg';\n\nconst Particles = () => (\n  <div>\n    <ParticlesBg type='lines' bg={true} />\n  </div>\n);\n\nexport default Particles;\n","import React, { useEffect } from 'react';\nimport { fakeAuth } from '../privateroute/PrivateRoute';\nimport '../styles/SignUp.css';\nimport Particles from '../layout/Particles';\n\nfunction SignIn({ icon }) {\n  const handleClick = async (e) => {\n    const getCurrentUser = await fetch('/api/currentuser', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((data) => data.json())\n      .then((result) => {\n        console.log(result[0].CurrentUserToken + '***********');\n        return result[0].CurrentUserToken;\n      });\n\n    fakeAuth.authenticate(getCurrentUser);\n  };\n  return (\n    <div>\n      <Particles></Particles>\n\n      <div className='container-fluid'>\n        <div id='loginSection' className='row'>\n          <div\n          // className='col-12 col-sm-6 col-md-3'\n          />\n          <div className='form-group'></div>\n\n          <a href='http://localhost:3001/auth/github'>\n            <button className={icon} onClick={handleClick}>\n              {' '}\n              Sign In with Github\n            </button>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\nSignIn.defaultProps = {\n  icon: 'fab fa-github',\n};\n\nexport default SignIn;\n","import { createContext } from 'react';\n\nconst wallMsgContext = createContext();\n\nexport default wallMsgContext;\n","import React, { useState, useContext } from 'react';\nimport WallMsgContext from '../../context/WallMessages/wallMsgContext';\n\nconst MessageBox = () => {\n  const [wallposting, setWallPosting] = useState([]);\n  const wallMsgContext = useContext(WallMsgContext);\n\n  const [state, setState] = useState('');\n\n  const onChange = (e) => {\n    const inputValue = e.target.value;\n    setState({\n      ...state,\n      [e.target.name]: inputValue,\n    });\n  };\n\n  const onsubmit = (event) => {\n    //   event.preventDefault();\n    // get form data out of state\n    var newPost = {\n      wallPostId: Math.random(),\n      wallPostContent: state.msgcontent,\n    };\n    fetch('/api/wallpost', {\n      method: 'POST',\n      body: JSON.stringify(newPost),\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((result) => {\n        console.log(result);\n      })\n      .then((data) => {\n        console.log(data);\n      });\n  };\n\n  return (\n    <div>\n      <div className='form-group'>\n        <label>githubHandle</label>\n        <textarea\n          value={state.msgcontent}\n          name='msgcontent'\n          onChange={onChange}\n          className='form-control'\n          id='exampleFormControlTextarea1'\n          rows='3'></textarea>\n        <button type='button' onClick={onsubmit} className='btn btn-primary'>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageBox;\n","import React, { createContext } from 'react';\n\nexport const LikesContext = createContext();\n","import { LIKED } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LIKED:\n      return {\n        ...state,\n        likesCount: state.likesCount + 1,\n      };\n    default:\n      return state;\n  }\n};\n","export const SEARCH_USERS = 'SEARCH_USERS';\nexport const GET_USER = 'GET_USER';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_UP = 'SIGN_UP';\nexport const LIKED = 'LIKED';\n","import React, { useReducer } from 'react';\nimport { LikesContext } from './likesContext';\nimport { LIKED } from '../types';\nimport LikesReducer from './likesReducer';\n\nconst LikesState = (props) => {\n  var initialState = {\n    likesCount: 0,\n  };\n\n  const [state, dispatch] = useReducer(LikesReducer, initialState);\n\n  const likeClicked = () => {\n    dispatch({\n      type: LIKED,\n    });\n  };\n\n  return (\n    <LikesContext.Provider value={{ ...state, likeClicked }}>\n      {props.children}\n    </LikesContext.Provider>\n  );\n};\n\nexport default LikesState;\n","import React, { useContext } from 'react';\r\nimport { LikesContext } from '../../context/Likes/likesContext';\r\n\r\nconst LikesCount = () => {\r\n  console.log(LikesContext);\r\n  const likesContext2 = useContext(LikesContext);\r\n\r\n  console.log(likesContext2);\r\n  console.log('hello');\r\n  return <h1>Hello </h1>;\r\n};\r\n\r\nexport default LikesCount;\r\n","import React, { useContext } from 'react';\nimport { LikesContext } from '../../context/Likes/likesContext';\nimport LikesState from '../../context/Likes/likesState';\n\nimport Test from './LikesCount';\n\nconst Likes = () => {\n  return (\n    <LikesState>\n      <div className='col-4'>\n        <Test />\n        <button\n          type='button'\n          className='btn btn-primary'\n          //   value={state.likesCount}\n          name='likesCount'\n          onClick={() => {}}>\n          Like\n        </button>\n      </div>\n    </LikesState>\n  );\n};\n\nexport default Likes;\n","import React from 'react';\n\nconst Reply = () => {\n  return (\n    <div className='col-4'>\n      <a className='btn btn-primary' href='#' role='button'>\n        Reply\n      </a>\n    </div>\n  );\n};\n\nexport default Reply;\n","import React from 'react';\n\nconst PostBox = () => {\n  fetch('/api/wallpost', {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Accept: 'application/json',\n    },\n  })\n    .then((data) => data.json())\n    .then((result) => {\n      console.log(result);\n    });\n\n  return (\n    <div>\n      <div className='form-group'>\n        <label>githubHandle</label>\n        <div className='form-control' id='exampleFormControlTextarea1' rows='3'>\n          Message\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostBox;\n","import React from \"react\"\nimport MessageBox from \"./MessageBox\"\nimport Likes from \"./Likes\"\nimport Reply from \"./Reply\"\nimport PostBox from \"./PostBox\"\n\nconst WallPost = () => {\n    return (\n        <div>\n            <PostBox />\n            <div className=\"row\">\n                <Likes />\n                <Reply />\n            </div>\n        </div>\n    )\n}\n\nexport default WallPost;","import React from \"react\"\n\nconst SubmitContent = () => {\n    return (\n        <div className=\"col-4\">\n            {/* <button type=\"button\" class=\"btn btn-primary\">Submit</button> */}\n        </div>\n    )\n}\n\nexport default SubmitContent;\n\n","import React from 'react';\nimport MessageBox from './MessageBox';\nimport Likes from './Likes';\nimport Reply from './Reply';\nimport SubmitContent from './Submit';\n\nconst WritePost = () => {\n  return (\n    <div>\n      <MessageBox />\n      <SubmitContent />\n    </div>\n  );\n};\n\nexport default WritePost;\n","import React from 'react';\nimport WallPost from '../wallpost/WallPost';\nimport WritePost from '../wallpost/WritePost';\n\nconst Wall = () => {\n  return (\n    <div>\n      <WallPost />\n      <br />\n      <WritePost />\n    </div>\n  );\n};\n\nexport default Wall;\n","import {Component} from \"react\";\nimport React from \"react\";\n\nclass Messages extends Component {\n  render() {\n    const {messages} = this.props;\n    return (\n      <ul className=\"Messages-list\">\n        {messages.map(m => this.renderMessage(m))}\n      </ul>\n    );\n  }\n\n  renderMessage(message) {\n    const {member, text} = message;\n    const {currentMember} = this.props;\n    const messageFromMe = member.id === currentMember.id;\n    const className = messageFromMe ?\n      \"Messages-message currentMember\" : \"Messages-message\";\n    return (\n      <li className={className}>\n      <span\n        className=\"avatar\"\n        style={{backgroundColor: member.clientData.color}}\n      />\n        <div className=\"Message-content\">\n          <div className=\"username\">\n            {member.clientData.username}\n          </div>\n          <div className=\"text\">{text}</div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Messages;\n","import {Component} from \"react\";\nimport React from \"react\";\n\nclass Input extends Component {\n  state = {\n    text: \"\"\n  }\n\n  onChange(e) {\n    this.setState({text: e.target.value});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({text: \"\"});\n    this.props.onSendMessage(this.state.text);\n  }\n\n  render() {\n    return (\n      <div className=\"Input\">\n        <form onSubmit={e => this.onSubmit(e)}>\n          <input\n            onChange={e => this.onChange(e)}\n            value={this.state.text}\n            type=\"text\"\n            placeholder=\"Enter your message and press ENTER\"\n            autofocus=\"true\"\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport '../../App.css';\nimport Messages from \"../../Messages\";\nimport Input from \"../../Input\";\n\nfunction randomName() {\n  const adjectives = [\n    \"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\",\n    \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\",\n    \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\",\n    \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\",\n    \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\",\n    \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\",\n    \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\",\n    \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\",\n    \"ancient\", \"purple\", \"lively\", \"nameless\"\n  ];\n  const nouns = [\n    \"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\",\n    \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\",\n    \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\",\n    \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\",\n    \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\",\n    \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\",\n    \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\",\n    \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\",\n    \"smoke\", \"star\"\n  ];\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  return adjective + noun;\n}\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\n\nclass ChatApp extends Component {\n  state = {\n    messages: [],\n    member: {\n      username: randomName(),\n      color: randomColor(),\n    }\n  }\n\n  constructor() {\n    super();\n    this.drone = new window.Scaledrone(\"v0EiAhIDZNsEFNfj\", {\n      data: this.state.member\n    });\n    this.drone.on('open', error => {\n      if (error) {\n        return console.error(error);\n      }\n      const member = {...this.state.member};\n      member.id = this.drone.clientId;\n      this.setState({member});\n    });\n    const room = this.drone.subscribe(\"observable-room\");\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({member, text: data});\n      this.setState({messages});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>Git.Chat</h1>\n        </div>\n        <Messages id = \"chatMessages\"\n          messages={this.state.messages}\n          currentMember={this.state.member}\n        />\n        <Input id = \"chatInput\"\n          onSendMessage={this.onSendMessage}\n        />\n      </div>\n    );\n  }\n\n  onSendMessage = (message) => {\n    this.drone.publish({\n      room: \"observable-room\",\n      message\n    });\n  }\n\n}\n\nexport default ChatApp;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //   Search Users\n  const searchUsers = async (text) => {\n    setLoading();\n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=\n    ${githubClientId}&client_id=\n    ${githubClientSecret}`);\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items,\n    });\n  };\n\n  // Get user\n  const getUser = async (username) => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=\n    ${githubClientId}&client_id=\n    ${githubClientSecret}`);\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data,\n    });\n  };\n\n  //  Get Repos\n\n  const getUserRepos = async (username) => {\n    setLoading();\n\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\n    ${githubClientId}&client_id=\n    ${githubClientSecret}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  };\n\n  //  Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  //  Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}>\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return action.payload;\n\n    case REMOVE_ALERT:\n      return null;\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = (props) => {\n  const initialState = null;\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  //   Set Alert\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert,\n      }}>\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport Home from './components/pages/Home';\nimport NotFound from './components/pages/NotFound';\nimport SignIn from './components/pages/SignIn';\nimport Wall from './components/pages/Wall';\nimport ChatApp from './components/pages/ChatApp';\nimport PrivateRoute from './components/privateroute/PrivateRoute';\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className='App'>\n            <Navbar />\n            <div className='container'>\n              <Alert />\n              <Switch>\n                <Route exact path='/chat' component={ChatApp} />\n                <Route exact path='/home' component={Wall} />\n                <Route exact path='/' component={SignIn} />\n                <Route exact path='/search' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}